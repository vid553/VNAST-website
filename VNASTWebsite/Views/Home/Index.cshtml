@using VNASTWebsite.Models;
@{
    ViewBag.Title = "Home Page";


    int counter1 = 0, counter2 = 0, counter3 = 0, counter4 = 0;
}

<script type="text/javascript">
    function showDetails(row) {
        var nextrow = row.parentNode.rows[row.rowIndex]; //row.RowIndex Å¡teje tudi rowe v thead
        var sp = nextrow.children[0].children[0]
        if (sp.hidden) {
            sp.hidden = false;
        }
        else {
            sp.hidden = true;
        }
    }
</script>

@if (Model != null)
{


    if (Model.privilege[0] == "worker")
    {
        // NEW:
        // if status != completed && timelimit < now MAKE IT RED
        // completed tasks daj posebej
        <h1>YOUR TASKS</h1>
        <table align="center" class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>
                        <h3 style="display:inline;">@Html.ActionLink("Priority", "Index", new { sort = "priority" })</h3>@if (Request.Params["sort"] != null && Request.Params["sort"] == "priority")
                        {<span style="display:inline;" class="glyphicon glyphicon-chevron-down"></span>}
                    </th>
                    <th>
                        <h3 style="display:inline;">@Html.ActionLink("Status", "Index", new { sort = "status" })</h3>@if (Request.Params["sort"] != null && Request.Params["sort"] == "status")
                        {<span style="display:inline;" class="glyphicon glyphicon-chevron-down"></span>}
                    </th>
                    <th>
                        <h3 style="display:inline;">@Html.ActionLink("Name", "Index", new { sort = "name" })</h3>@if (Request.Params["sort"] != null && Request.Params["sort"] == "name")
                        {<span style="display:inline;" class="glyphicon glyphicon-chevron-down"></span>}
                    </th>
                    <th>
                        <h3 style="display:inline;">@Html.ActionLink("Deadline", "Index", new { sort = "deadline" })</h3>@if (Request.Params["sort"] != null && Request.Params["sort"] == "deadline")
                        {<span style="display:inline;" class="glyphicon glyphicon-chevron-down"></span>}
                    </th>
                    <th> </th>

                    @*<th><h3>@Html.ActionLink("Status", "Index", new { sort = "status" })</h3></th>
                        <th><h3>@Html.ActionLink("Name", "Index", new { sort = "name" })</h3></th>
                        <th><h3>@Html.ActionLink("Deadline", "Index", new { sort = "deadline" })</h3></th>
                        <th> </th>*@
                </tr>
            </thead>
            <tbody>
                @{
                    string filter;
                    if (Request.Params["sort"] != null)
                    {
                        filter = Request.Params["sort"];
                    }
                    else
                    {
                        filter = "deadline";
                    }
                    // filter items
                    List<Assignment> tasks = Model.tasks;
                    switch (filter)
                    {
                        case "priority":
                            tasks = tasks.OrderByDescending(t => t.priority).ToList();
                            break;
                        case "name":
                            tasks = tasks.OrderBy(t => t.name).ToList();
                            break;
                        case "deadline":
                            tasks = tasks.OrderByDescending(t => t.time_limit).ToList();
                            break;
                        case "status":
                            tasks = tasks.OrderByDescending(t => t.status[0]).ToList();
                            break;
                        default:
                            tasks = tasks.OrderByDescending(t => t.time_limit).ToList();  // deadline
                            break;
                    }

                }
                @foreach (var item in tasks.Where(t => t.status[0] != "completed"))
                {

                    counter1++;
                    <tr onclick="showDetails(this)">
                        <td>@item.priority</td>
                        <td>@item.status[0]</td>
                        <td>
                            @item.name
                        </td>
                        <td class="@if (item.time_limit != null && item.time_limit < DateTime.Now) // zamujeno
                        {
                            @Html.Raw("bg-danger text-white")
                        }
                        else if(item.time_limit != null && item.time_limit < DateTime.Now && item.time_limit >= DateTime.Now.AddDays(-1)) // due tomorrow
                        {
                            @Html.Raw("bg-warning text-white")
                        }
                        ">
                            @if (item.time_limit != null)
                            {
                                @item.time_limit.Value.ToString("dd. MM. yyyy")
                            }
                        </td>
                        <td>@Html.ActionLink("Change status", "Evaluate", new { id = item._id })</td>
                    </tr>
                    <tr>
                        <td colspan="5">
                            <span hidden>@item.description</span>
                        </td>
                    </tr>
                }
                @if (counter1 == 0)
                {
                    <tr><td>No pending assignments</td><td></td></tr>
                }

            </tbody>
        </table>
        @*completed tasks
            (t.time_limit < DateTime.Now || t.time_limit == null)
        *@
        <details>
            <summary>SHOW COMPLETED TASKS</summary>
            <table align="center" class="table table-striped table-hover">
                <thead>
                    <tr></tr>
                </thead>
                <tbody>
                    @foreach (var item in tasks.Where(t => t.status[0] == "completed"))
                    {
                        <tr onclick="showDetails(this)">
                            <td>@item.priority</td>
                            <td>@item.status[0]</td>
                            <td>
                                @item.name
                            </td>
                            <td>
                                @if (item.time_limit != null)
                                {
                                    @item.time_limit.Value.ToString("dd. MM. yyyy")
                                }
                            </td>
                            <td>@Html.ActionLink("Change status", "Evaluate", new { id = item._id })</td>
                        </tr>
                        <tr>
                            <td colspan="5">
                                <span hidden>@item.description</span>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </details>
        @*<h4>@Html.ActionLink("SHOW COMPLETED TASKS", "Index", new { sort = filter, showCompleted = "true" })</h4>*@


        <h1 style="margin-top:50px;">YOUR GROUPS</h1>
        <table align="center" class="table table-striped table-hover">
            <thead>
                <tr>
                    <th><h3>Name</h3></th>
                    <th><h3>No. of Workers</h3></th>
                    <th><h3>Created</h3></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Groups)
                {
                    <tr>
                        <th><a href="">@item.name</a></th>
                        <th> @item.workers.Count</th>
                        <th> @item.created_date</th>
                    </tr>
                }
            </tbody>
        </table>
    }

    else if (Model.privilege[0] == "admin")
    {


        <table align="center" class="table  table-striped table-hover">
            <thead>
                <tr><th>USERS</th></tr>
                <tr>
                    <th>Username</th>
                    <th>Role</th>
                    <th>Email</th>
                    <th>ID</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.workers)
                {

                    <tr>
                        <th>@item.username</th>
                        <th> @item.privilege[0]</th>
                        <th> @item.email</th>
                        <th> @item._id</th>
                        <th>@Html.ActionLink("Edit", "EditUser", new { id = item._id })</th>
                        <th>@Html.ActionLink("Delete", "DeleteUser", new { id = item._id })</th>
                        <th>@Html.ActionLink("New Chat", "CreateChat", "Chat", new { user_id = item._id }, null)</th>
                    </tr>

                }
            </tbody>
        </table>
        <button onclick="location.href = '/Account/Register'" type="button" class="btn btn-primary">
            CREATE NEW USER
        </button>

    }
    else if (Model.privilege[0] == "manager")
    {
        <h1>GROUPS YOU ARE MANAGER IN</h1>
        foreach (var item in Model.Groups)
        {
            <table align="center" class="table  table-striped table-hover">
                <thead>
                    <tr><th>@item.name</th><th>@Html.ActionLink("Show group chat", "GroupChat", new {id = item._id })</th></tr>
                    <tr>
                        <th>Username</th>
                        <th>Role</th>
                        <th>Email</th>
                        <th>ID</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item1 in item.Workers)
                    {
                        if (item1 != null)
                        {
                            <tr>
                                <th>@item1.username</th>
                                <th> @item1.privilege[0]</th>
                                <th> @item1.email</th>
                                <th> @item1._id</th>
                                <th><button type="button" class="btn btn-primary">REMOVE</button></th>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        }

        <h1>TASKS IN PROGRESS</h1>
        <table align="center" class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>
                        <h3 style="display:inline;">@Html.ActionLink("Name", "Index", new { sort = "name" })</h3>@if (Request.Params["sort"] != null && Request.Params["sort"] == "name")
                        {<span style="display:inline;" class="glyphicon glyphicon-chevron-down"></span>}
                    </th>
                    <th>
                        <h3 style="display:inline;">@Html.ActionLink("Priority", "Index", new { sort = "priority" })</h3>@if (Request.Params["sort"] != null && Request.Params["sort"] == "priority")
                        {<span style="display:inline;" class="glyphicon glyphicon-chevron-down"></span>}
                    </th>
                    <th>
                        <h3 style="display:inline;">@Html.ActionLink("Status", "Index", new { sort = "status" })</h3>@if (Request.Params["sort"] != null && Request.Params["sort"] == "status")
                        {<span style="display:inline;" class="glyphicon glyphicon-chevron-down"></span>}
                    </th>
                    <th>
                        <h3 style="display:inline;">@Html.ActionLink("Assigned to", "Index", new { sort = "assigned_to" })</h3>@if (Request.Params["sort"] != null && Request.Params["sort"] == "assigned_to")
                        {<span style="display:inline;" class="glyphicon glyphicon-chevron-down"></span>}
                    </th>
                    <th>
                        <h3 style="display:inline;">@Html.ActionLink("Deadline", "Index", new { sort = "deadline" })</h3>@if (Request.Params["sort"] != null && Request.Params["sort"] == "deadline")
                        {<span style="display:inline;" class="glyphicon glyphicon-chevron-down"></span>}
                    </th>
                    <th> </th>
                    <th> </th>

                    @*<th><h3>@Html.ActionLink("Status", "Index", new { sort = "status" })</h3></th>
                        <th><h3>@Html.ActionLink("Name", "Index", new { sort = "name" })</h3></th>
                        <th><h3>@Html.ActionLink("Deadline", "Index", new { sort = "deadline" })</h3></th>
                        <th> </th>*@
                </tr>
            </thead>
            <tbody>
                @{
                    string filter;
                    if (Request.Params["sort"] != null)
                    {
                        filter = Request.Params["sort"];
                    }
                    else
                    {
                        filter = "deadline";
                    }
                    // filter items
                    List<Assignment> tasks = Model.tasks;
                    switch (filter)
                    {
                        case "priority":
                            tasks = tasks.OrderByDescending(t => t.priority).ToList();
                            break;
                        case "name":
                            tasks = tasks.OrderBy(t => t.name).ToList();
                            break;
                        case "deadline":
                            tasks = tasks.OrderByDescending(t => t.time_limit).ToList();
                            break;
                        case "status":
                            tasks = tasks.OrderByDescending(t => t.status[0]).ToList();
                            break;
                        case "assigned_to":
                            tasks = tasks.OrderByDescending(t => t.assigned_to_workerName).ToList();
                            break;
                        default:
                            tasks = tasks.OrderByDescending(t => t.time_limit).ToList();  // deadline
                            break;
                    }

                }
                @foreach (var item in tasks.Where(t => t.status[0] != "completed"))
                {

                    counter1++;
                    <tr onclick="showDetails(this)">
                        <td>@item.name</td>
                        <td>@item.priority</td>
                        <td>@item.status[0]</td>
                        <td>@(item.assigned_to_workerName == null || item.assigned_to_workerName == "" ? "UNASSIGNED" : item.assigned_to_workerName)</td>
                        <td class="@if (item.time_limit != null && item.time_limit < DateTime.Now) // zamujeno
                        {
                            @Html.Raw("bg-danger text-white")
                        }
                        else if(item.time_limit != null && item.time_limit < DateTime.Now && item.time_limit >= DateTime.Now.AddDays(-1)) // due tomorrow
                        {
                            @Html.Raw("bg-warning text-white")
                        }
                        ">
                            @if (item.time_limit != null)
                            {
                                @item.time_limit.Value.ToString("dd. MM. yyyy")
                            }
                        </td>
                        <td>
                            @if (item.status[0] == "pending")
                            {
                                @Html.ActionLink("DECLINE", "Decline", new { id = item._id })
                            }
                            else
                            {
                                @Html.ActionLink("Assign", "Assign", new { id = item._id })
                            }

                        </td>
                        <td>
                            @if (item.status[0] == "pending")
                            {
                                @Html.ActionLink("ACCEPT", "Accept", new { id = item._id })}
                            else
                            {
                                @Html.ActionLink("Change status", "Evaluate", new { id = item._id })}

                        </td>
                    </tr>
                    <tr>
                        <td colspan="7">
                            <span hidden>@item.description</span>
                        </td>
                    </tr>
                }
                @if (counter1 == 0)
                {
                    <tr><td>No tasks to show</td><td></td></tr>
                }

            </tbody>
        </table>
        <details>
            <summary>SHOW COMPLETED TASKS</summary>
            <table align="center" class="table table-striped table-hover">
                <thead>
                    <tr></tr>
                </thead>
                <tbody>
                    @foreach (var item in tasks.Where(t => t.status[0] == "completed"))
                    {

                        counter1++;
                        <tr onclick="showDetails(this)">
                            <td>@item.name</td>
                            <td>@item.priority</td>
                            <td>@item.status[0]</td>
                            <td>@(item.assigned_to_workerName == null || item.assigned_to_workerName == "" ? "UNASSIGNED" : item.assigned_to_workerName)</td>
                            <td>
                                @if (item.time_limit != null)
                                {
                                    @item.time_limit.Value.ToString("dd. MM. yyyy")
                                }
                            </td>
                            <td>
                                @*@if (item.status[0] == "pending")
                                {
                                    @Html.ActionLink("DECLINE", "Decline", new { id = item._id })
                                }
                                else
                                {
                                    @Html.ActionLink("Assign", "Assign", new { id = item._id })
                                }*@

                            </td>
                            <td>
                                @*@if (item.status[0] == "pending")
                                {
                                    @Html.ActionLink("ACCEPT", "Accept", new { id = item._id })}
                                else
                                {
                                    @Html.ActionLink("Change status", "Evaluate", new { id = item._id })}*@

                            </td>
                        </tr>
                        <tr>
                            <td colspan="7">
                                <span hidden>@item.description</span>
                            </td>
                        </tr>
                    }
                    @if (counter1 == 0)
                    {
                        <tr><td>No tasks to show</td><td></td></tr>
                    }

                </tbody>
            </table>
        </details>

    }
}
