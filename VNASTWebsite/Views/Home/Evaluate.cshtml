@model VNASTWebsite.Models.Assignment
@{
    ViewBag.Title = "Evaluate";
}

<h2>Evaluate</h2>

@using (Html.BeginForm())
{@Html.AntiForgeryToken()
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @*@Html.LabelFor(m => m.priority, new { @class = "col-md-2 control-label" })*@
        <div class="col-md-10">
            @Html.HiddenFor(m => m.priority)
            @*     @Html.ValidationMessageFor(m => m.priority, "", new { @class = "text-danger" })*@
        </div>
    </div>
    <div class="form-group">
        @*  @Html.LabelFor(m => m.status, new { @class = "col-md-2 control-label" })*@
        <div class="col-md-10">
            @Html.HiddenFor(m => m.status[0])
            @*   @Html.ValidationMessageFor(m => m.status, "", new { @class = "text-danger" })*@
        </div>
    </div>
    <div class="form-group">
        @*     @Html.LabelFor(m => m.created_date, new { @class = "col-md-2 control-label" })*@
        <div class="col-md-10">
            @Html.HiddenFor(m => m.created_date)
            @*    @Html.ValidationMessageFor(m => m.created_date, "", new { @class = "text-danger" })*@
        </div>
    </div>
    <div class="form-group">
        @*   @Html.LabelFor(m => m._id, new { @class = "col-md-2 control-label" })*@
        <div class="col-md-10">
            @Html.HiddenFor(m => m._id)
            @*      @Html.ValidationMessageFor(m => m._id, "", new { @class = "text-danger" })*@
        </div>
    </div>
    <div class="form-group">
        @*   @Html.LabelFor(m => m.name, new { @class = "col-md-2 control-label" })*@
        <div class="col-md-10">
            @Html.HiddenFor(m => m.name)
            @*       @Html.ValidationMessageFor(m => m.name, "", new { @class = "text-danger" })*@
        </div>
    </div>
    <div class="form-group">
        @*   @Html.LabelFor(m => m.created_by, new { @class = "col-md-2 control-label" })*@
        <div class="col-md-10">
            @Html.HiddenFor(m => m.created_by)
            @*    @Html.ValidationMessageFor(m => m.created_by, "", new { @class = "text-danger" })*@
        </div>
    </div>
    <div class="form-group">
        @*   @Html.LabelFor(m => m.description, new { @class = "col-md-2 control-label" })*@
        <div class="col-md-10">
            @Html.HiddenFor(m => m.description)
        </div>
    </div><div class="form-group">
    @*   @Html.LabelFor(m => m.description, new { @class = "col-md-2 control-label" })*@
    <div class="col-md-10">
        @Html.HiddenFor(m => m.assigned_to_worker)
    </div>
</div>
    <div class="form-group">

        <div class="col-md-10">
            Change assignment status:
            @*        @Html.DropDownListFor(m => m.assigned_to_worker,new SelectList(m.potentialWorkers, "AssignWorker", "Name")*@
            @Html.DropDownListFor(item => item.status, 
            new List<SelectListItem> { 
                       new SelectListItem { Value = "canceled" , Text = "Canceled" },
                       new SelectListItem { Value = "ongoing" , Text = "Ongoing" },
                       new SelectListItem { Value = "pending" , Text = "Pending" },
            new SelectListItem { Value = "completed" , Text = "Completed" }}, "--Select--")

            @*     @Html.HiddenFor(m => m.assigned_to_worker, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.assigned_to_worker, "", new { @class = "text-danger" }) *@
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-default" value="Save" />
                </div>
            </div>
        </div>

    </div>


}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

